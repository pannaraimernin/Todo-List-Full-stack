{"ast":null,"code":"var _jsxFileName = \"/Users/panna/Repos/TodoList-Axios/exercise-frontend-authentication/src/components/pages/Register.js\";\nimport React from 'react';\nimport { Form, Input, Button, Row, Col, Divider, notification } from 'antd';\nimport axios from '../../config/axios';\nimport Title from 'antd/lib/typography/Title';\nconst layout = {\n  labelCol: {\n    xs: 24,\n    sm: 7,\n    md: 6,\n    lg: 6,\n    xl: 5,\n    xxl: 4\n  },\n  wrapperCol: {\n    xs: 24,\n    sm: 17,\n    md: 18,\n    lg: 18,\n    xl: 19,\n    xxl: 20\n  }\n};\nexport default function Register() {\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n    const body = {\n      username: values.email,\n      password: values.password,\n      name: values.nickname\n    };\n    axios.post(\"/register\", body).then(res => {\n      notification.success({\n        message: `${values.nickname} register successful`\n      });\n    }).catch(err => {\n      notification.error({\n        message: `${values.nickname} register is fale`\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 23,\n    sm: 23,\n    md: 23,\n    lg: 14,\n    xl: 14,\n    xxl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Divider, {\n    className: \"Divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    onFinish: onFinish,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"Confirm Password\",\n    hasFeedback: true,\n    dependencies: [\"password\"] // หมายถึง ถ้าเจอ name = \"password\"ให้เช็ค rule ด้านล่างอีกครั้งนึง\n    ,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(\"Confirm password has to the same as password\");\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"nickname\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 36\n      }\n    }, \"Nickname\\xA0\"),\n    rules: [{\n      required: true,\n      message: 'Please input your nickname!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"Button\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"Register\")))));\n}","map":{"version":3,"sources":["/Users/panna/Repos/TodoList-Axios/exercise-frontend-authentication/src/components/pages/Register.js"],"names":["React","Form","Input","Button","Row","Col","Divider","notification","axios","Title","layout","labelCol","xs","sm","md","lg","xl","xxl","wrapperCol","Register","onFinish","values","console","log","body","username","email","password","name","nickname","post","then","res","success","message","catch","err","error","width","type","required","getFieldValue","validator","rule","value","Promise","resolve","reject","whitespace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Row, Col, Divider ,notification} from 'antd';\nimport axios from '../../config/axios';\nimport Title from 'antd/lib/typography/Title';\n\nconst layout = {\n    labelCol: { xs: 24, sm: 7, md: 6, lg: 6, xl: 5, xxl: 4 },\n    wrapperCol: { xs: 24, sm: 17, md: 18, lg: 18, xl: 19, xxl: 20 },\n};\nexport default function Register() {\n\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n        const body = {\n            username : values.email,\n            password: values.password,\n            name: values.nickname\n        }\n\n        axios.post(\"/register\",body)\n        .then(res =>{\n            notification.success({\n                message: `${values.nickname} register successful`,\n               \n              });\n\n        })\n        .catch(err =>{\n            notification.error({\n                message: `${values.nickname} register is fale`,\n               \n              });\n\n        })\n    };\n\n    return (\n        <Row justify=\"center\" >\n            <Col xs={23} sm={23} md={23} lg={14} xl={14} xxl={12}>\n                <div\n                    className=\"Form\"\n                >\n                    <Row justify=\"center\">\n                        <Title level={2} className=\"Title\">\n                            Register\n                        </Title>\n                    </Row>\n                    <Divider className=\"Divider\" />\n                    <Form\n                        {...layout}\n                        onFinish={onFinish}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            label=\"E-mail\"\n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                            hasFeedback\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"confirm\"\n                            label=\"Confirm Password\"\n                            hasFeedback\n                            dependencies = {[\"password\"]} // หมายถึง ถ้าเจอ name = \"password\"ให้เช็ค rule ด้านล่างอีกครั้งนึง\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please confirm your password!',\n                                },\n                                ({getFieldValue})=> ({\n                                    validator(rule,value) {\n                                        if(!value || getFieldValue('password')=== value) {\n                                            return Promise.resolve();\n                                        } \n                                        return Promise.reject(\"Confirm password has to the same as password\")\n                                    }\n                                })\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"nickname\"\n                            label={<span>Nickname&nbsp;</span>}\n                            rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                            <Button className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                    </Form>\n                </div>\n            </Col>\n        </Row>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}