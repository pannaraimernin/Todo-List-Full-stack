{"ast":null,"code":"var _jsxFileName = \"/Users/panna/Repos/TodoList-Axios/exercise-frontend-authentication/src/components/pages/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Row, Col, Divider, notification } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport axios from '../../config/axios';\nimport LocalStorageService from '../../services/localStorageService';\nconst layout = {\n  labelCol: {\n    xs: 24,\n    sm: 5,\n    md: 4,\n    lg: 5,\n    xl: 4,\n    xxl: 3\n  },\n  wrapperCol: {\n    xs: 24,\n    sm: 19,\n    md: 20,\n    lg: 19,\n    xl: 20,\n    xxl: 21\n  }\n};\nexport default function Login() {\n  const onFinish = values => {\n    const body = {\n      username: values.username,\n      password: values.password\n    };\n    axios.post(\"/users/login\", body).then(result => {\n      LocalStorageService.setToken(result.data);\n    }).catch(err => {\n      notification.console.error();\n      ({\n        message: `login is faile`\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 23,\n    sm: 23,\n    md: 23,\n    lg: 14,\n    xl: 14,\n    xxl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Divider, {\n    className: \"Divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, Object.assign({\n    className: \"App\"\n  }, layout, {\n    onFinish: onFinish,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"Button\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["/Users/panna/Repos/TodoList-Axios/exercise-frontend-authentication/src/components/pages/Login.js"],"names":["React","Form","Input","Button","Row","Col","Divider","notification","Title","axios","LocalStorageService","layout","labelCol","xs","sm","md","lg","xl","xxl","wrapperCol","Login","onFinish","values","body","username","password","post","then","result","setToken","data","catch","err","console","error","message","width","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Row, Col, Divider,notification } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport axios from '../../config/axios'\nimport LocalStorageService from '../../services/localStorageService';\n\n\nconst layout = {\n    labelCol: { xs: 24, sm: 5, md: 4, lg: 5, xl: 4, xxl: 3 },\n    wrapperCol: { xs: 24, sm: 19, md: 20, lg: 19, xl: 20, xxl: 21 },\n};\n\nexport default function Login() {\n\n    const onFinish = values => {\n        const body ={\n            username : values.username,\n            password : values.password\n        };\n        axios.post(\"/users/login\", body)\n        .then(result =>{\n            LocalStorageService.setToken(result.data)\n\n        })\n        .catch(err =>{\n            notification.console.error();\n            ({\n                message: `login is faile`,\n               \n              });\n\n        })\n    };\n\n    return (\n        <Row justify=\"center\">\n            <Col xs={23} sm={23} md={23} lg={14} xl={14} xxl={12}>\n                <div className=\"Form\">\n                    <Row justify=\"center\">\n                        <Title level={2} className=\"Title\">\n                            Login\n                    </Title>\n                    </Row>\n                    <Divider className=\"Divider\" />\n                    <Form\n                        className=\"App\"\n                        {...layout}\n                        onFinish={onFinish}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Form.Item\n                            label=\"Username\"\n                            name=\"username\"\n                            rules={[{ required: true, message: 'Please input your username!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[{ required: true, message: 'Please input your password!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Button className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </div>\n            </Col>\n        </Row>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}